/* {{{ %%SECTION_HEADER%%
 * * * *
 * This header information is automatically generated by KodeUtils.
 *
 * File 'educational-robot-sumo.scad' edited by kwendenarmo,
 * last modified: 2016-07-03.
 * This file is part of 'educational-robot-sumo' package, please see
 * the readme files for more information about this file and this package.
 *
 * Copyright (C) 2016 by kwendenarmo <kwendenarmo@akornsys-rdi.net>
 * Released under the GNU GPLv3
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * * * *
 * %%EOS_HEADER%% }}}
 */

$fn=360;

/*
 *  Tornillos
 *  -   Eje delantero 2x M3x30 + 2 arandela plana + 2 arandela plana + 2 tuerca + 1 arandela plana + 1 arandela plana + 1 tuerca
 *  -   Sujeción soporte pala 2x M3x16
 *  -   Varillas soporte pala 2x M5x70
 *  -   Portapilas 2x M3x6
 *  -   Prisionero ruedas motrices 2x M3x6
 *  -   Sujeciones tapas motor 4x M3x16
 *  -   Tornillo plastico cuerno servo
 *  -   Tornillo plastico fijación servo
 */

translate([-10,20,12.5]) base();
translate([-60,0,23]) pala();
translate([-28,34.8,33.6]) rotate([-90,0,90]) hcsr04();
translate([37.25,0,29.5]) soporte_pala();
translate([37.25,45,21.75]) rotate([90,0,0]) servo9g(180);
translate([0,17.5,21.07665]) rotate([0,0,180]) wheel(9);
translate([0,8.75,21.07665]) rotate([0,0,180]) eje_delantero();
translate([130,17.5,25.76035]) rotate([0,0,180]) driving_wheel(11);
translate([130,18.5,25.76035]) motor();
translate([119,29,25.75]) tapa_motor();
translate([0,97.5,21.07665]) wheel(9);
translate([0,106.25,21.07665]) eje_delantero();
translate([130,97.5,25.76035]) driving_wheel(11);
translate([130,96.5,25.76035]) rotate([0,0,180]) motor();
translate([119,71,25.75]) tapa_motor();
for (i=[0:15:130]) {
    for(j=[0:95:95]) {
        translate([i,j,0]) track_link();
    }
}
translate([52.5,28.5,16]) rotate([0,0,0]) portapilas();
translate([145,33.65,37]) rotate([0,0,90]) roben_zond();

module base() {
    difference() {
        union() {
            //base
            cube([155,75,3]);
            //corredera tensor izquierda
            translate([6,4.2,8.57665]) hull() {
                rotate([-90,0,0]) cylinder(r=6, h=10);
                translate([20,0,0]) rotate([-90,0,0]) cylinder(r=6, h=10);
                translate([-6,0,-6]) cube([32,10,6]);
            }
            //corredera tensor derecha
            translate([6,60.8,8.57665]) hull() {
                rotate([-90,0,0]) cylinder(r=6, h=10);
                translate([20,0,0]) rotate([-90,0,0]) cylinder(r=6, h=10);
                translate([-6,0,-6]) cube([32,10,6]);
            }
            //soporte motor izquierdo
            translate([129,9,3]) cube([22,15,9.76035]);
            //soporte motor derecho
            translate([129,51,3]) cube([22,15,9.76035]);
            //soporte pala izquierdo
            translate([47.25,0,17]) hull() {
                rotate([-90,0,0]) cylinder(r=4, h=4.5);
                translate([-7,0,-15]) cube([14,4.5,1]);
            }
            //soporte pala derecho
            translate([47.25,70.5,17]) hull() {
                rotate([-90,0,0]) cylinder(r=4, h=4.5);
                translate([-7,0,-15]) cube([14,4.5,1]);
            }
            //encajes servo
            translate([53.5,36.5,0]) cube([5,4,15.5]);
            translate([21.75,29.5,0]) cube([5,11,17]);
        }
        union() {
            //esquina delantera izquierda
            difference() {
                translate([-1,-1,-1]) cube([8,5,5]);
                hull() {
                    translate([0.5,3.5,0]) cylinder(r=0.5, h=3);
                    translate([0.5,5,0]) cylinder(r=0.5, h=3);
                    translate([7,0.5,0]) cylinder(r=0.5, h=3);
                    translate([7,5,0]) cylinder(r=0.5, h=3);
                }
            }
            //esquina delantera derecha
            difference() {
                translate([-1,71,-1]) cube([8,5,5]);
                hull() {
                    translate([0.5,71.5,0]) cylinder(r=0.5, h=3);
                    translate([0.5,70,0]) cylinder(r=0.5, h=3);
                    translate([7,74.5,0]) cylinder(r=0.5, h=3);
                    translate([7,70,0]) cylinder(r=0.5, h=3);
                }
            }
            //guia corredera tensor izquierda
            translate([6,3.2,8.57665]) hull() {
                rotate([-90,0,0]) cylinder(r=1.75, h=12);
                translate([20,0,0]) rotate([-90,0,0]) cylinder(r=1.75, h=12);
            }
            //guia corredera tensor derecha
            translate([6,59.7,8.57665]) hull() {
                rotate([-90,0,0]) cylinder(r=1.75, h=12);
                translate([20,0,0]) rotate([-90,0,0]) cylinder(r=1.75, h=12);
            }
            //reposa-soporte pala izquierdo
            translate([0,9.25,17]) rotate([0,90,0]) cylinder(r=3.5, h=30);
            //reposa-soporte pala derecho
            translate([0,65.75,17]) rotate([0,90,0]) cylinder(r=3.5, h=30);
            //agujero tornillo pivotante pala
            translate([47.25,-1,17]) rotate([-90,0,0]) cylinder(r=1.75, h=77);
            //cajeado servo
            translate([55.625,35,9.25]) rotate([-90,0,0]) cylinder(r=0.75, h=6);
            translate([24,33.5,3]) cube([3,3,13]);
            //hueco motor
            translate([140,8,25.76035-12.5]) difference() {
                rotate([-90,0,0]) cylinder(r=6.25, h=59); //motor
                union() {
                    translate([-6.25,-1,5.25]) cube([12.5,61,3]);
                    translate([-6.25,-1,-8.25]) cube([12.5,61,3]);
                }
            }
            //agujeros tapa motor izquierdo
            translate([131.5,16.5,3]) cylinder(r=1.25, h=11);
            translate([148.5,16.5,3]) cylinder(r=1.25, h=11);
            //agujeros tapa motor derecho
            translate([131.5,58.5,3]) cylinder(r=1.25, h=11);
            translate([148.5,58.5,3]) cylinder(r=1.25, h=11);
            //agujeros portapilas
            translate([66.4,37.5,-1]) union() {
                cylinder(r=1.25, h=6);
                translate([54.7,0,0]) cylinder(r=1.25, h=6);
            }
            //aligerar base
            translate([6,50,-1]) hull() {
                cylinder(r=4, h=5);
                translate([0,-25,0]) cylinder(r=4, h=5);
                translate([10,-5,0]) cylinder(r=4, h=5);
                translate([10,-20,0]) cylinder(r=4, h=5);
            }
            translate([147,30,-1]) hull() {
                cylinder(r=4, h=5);
                translate([0,15,0]) cylinder(r=4, h=5);
                translate([-15,10,0]) cylinder(r=4, h=5);
                translate([-15,5,0]) cylinder(r=4, h=5);
            }
            translate([30,21.5,-1]) hull() {
                cylinder(r=6, h=5);
                translate([50,0,0]) cylinder(r=6, h=5);
            }
            translate([30,53.5,-1]) hull() {
                cylinder(r=6, h=5);
                translate([50,0,0]) cylinder(r=6, h=5);
            }
            translate([105,10,-1]) hull() {
                cylinder(r=4, h=5);
                translate([15,0,0]) cylinder(r=4, h=5);
                translate([-15,22,0]) cylinder(r=4, h=5);
                translate([0,22,0]) cylinder(r=4, h=5);
            }
            translate([90,43,-1]) hull() {
                cylinder(r=4, h=5);
                translate([15,0,0]) cylinder(r=4, h=5);
                translate([15,22,0]) cylinder(r=4, h=5);
                translate([30,22,0]) cylinder(r=4, h=5);
            }
        }
    }
}

module pala() {
    dia=52;
    grosor=3;
    largo=115;
    
    difference() {
        union() {
            //pala
            difference() {
                hull() {
                    rotate([-90,0,0]) cylinder(r=dia/2, h=largo);
                    translate([dia/2-5,0,-dia/2+5]) rotate([-90,0,0]) cylinder(r=5, h=largo);
                }
                union() {
                    translate([0,-1,0]) rotate([-90,0,0]) cylinder(r=dia/2-grosor, h=largo+2);
                    translate([-dia/2-1,-1,-dia/2-1]) cube([dia/2+1,largo+2,dia+2]);
                    rotate([0,60,0]) translate([-dia/2-1,-1,0]) cube([dia/2+1,largo+2,dia+2]);
                }
            }
            //bisel pala
            translate([-dia/4,0,-dia/2]) cube([dia/4,largo,grosor]);
            translate([-dia/4,0,-dia/2]) hull() {
                cube([0.1,largo,grosor]);
                translate([-dia/4,0,0,]) cube([0.1,largo,0.1]);
            }
            //soporte sensor
            difference() {
                hull() {
                    translate([25,31.3,-17]) rotate([-90,0,0]) cylinder(r=2.5, h=52);
                    translate([31,31.3,-11]) rotate([-90,0,0]) cylinder(r=2.5, h=52);
                    translate([25,31.3,-11]) rotate([-90,0,0]) cylinder(r=2.5, h=52);
                }
                hull() {
                    translate([25,30.3,-9]) rotate([-90,0,0]) cylinder(r=1.5, h=54);
                    translate([31,30.3,-9]) rotate([-90,0,0]) cylinder(r=1.5, h=54);
                    translate([25,30.3,-8]) rotate([-90,0,0]) cylinder(r=1.5, h=54);
                    translate([31,30.3,-8]) rotate([-90,0,0]) cylinder(r=1.5, h=54);
                }
            }
            //brazos
            hull() {    //brazo izquierdo
                translate([26.5,24.75,2.05]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
                translate([25.5,24.75,0.5]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
                translate([26.5,24.75,10.5]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
                translate([24.5,24.75,10.5]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
            }
            hull() {    //brazo derecho
                translate([26.5,81.25,2.05]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
                translate([25.5,81.25,0.5]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
                translate([26.5,81.25,10.5]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
                translate([24.5,81.25,10.5]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
            }
        }
        union() {
            //sensor ultrasonidos
            translate([dia/2-grosor*2,-13+largo/2,0]) union() {
                rotate([0,90,0]) cylinder(r=8.25, h=grosor*3);
                translate([0,26,0]) rotate([0,90,0]) cylinder(r=8.25, h=grosor*3);
            }
            //brazos pala
            translate([21,29.25,6.5]) rotate([0,90,0]) cylinder(r=2, h=8);
            translate([21,85.75,6.5]) rotate([0,90,0]) cylinder(r=2, h=8);
        }
    }
}

module soporte_pala() {
    difference() {
        union() {
            translate([-10,24.75,-4.5]) cube([15,65.5,9]);
            translate([-17.5,39,-5.5]) cube([22.5,5,10]);
        }
        union() {
            //varillas brazo
            translate([-3.5,29.25,0]) rotate([0,-90,0]) cylinder(r=2.5, h=7);
            translate([-3.5,85.75,0]) rotate([0,-90,0]) cylinder(r=2.5, h=7);
            //tornillo pivotante
            translate([0,24,0]) rotate([-90,0,0]) cylinder(r=1.25, h=11);
            translate([0,80,0]) rotate([-90,0,0]) cylinder(r=1.25, h=11);
            //forma servo
            translate([-11,35,-2.5]) hull() {
                rotate([0,90,0]) cylinder(r=2.5, h=17);
                translate([0,0,-2]) rotate([0,90,0]) cylinder(r=2.5, h=17);
                translate([0,45,0]) rotate([0,90,0]) cylinder(r=2.5, h=17);
                translate([0,45,-2]) rotate([0,90,0]) cylinder(r=2.5, h=17);
            }
            translate([5,35,-2.5]) hull() {
                cylinder(r=2.5, h=17);
                translate([2,0,0])cylinder(r=2.5, h=17);
                translate([0,45,0])cylinder(r=2.5, h=17);
                translate([2,45,0])cylinder(r=2.5, h=17);
            }
        }
    }
    color("grey") translate([-4.5,29.25,0]) rotate([0,-90,0]) cylinder(r=2.5, h=70);
    color("grey") translate([-4.5,85.75,0]) rotate([0,-90,0]) cylinder(r=2.5, h=70);
}

module track_link() {
    difference() {
        union() {
            hull() {
                rotate([-90,0,0]) cylinder(r=3.5, 20);
                translate([15,0,0]) rotate([-90,0,0]) cylinder(r=3.5, 20);
            }
            translate([-4,0,3.5]) cube([22,20,3]);
        }
        union() {
            //forma
            translate([-4.5,-1,-4]) cube([24,22,1]);
            translate([-4.5,-1,3]) cube([24,22,4]);
            //lenguetas
            translate([-5,5,-4]) cube([9,10,11]);
            translate([11,-1,-4]) cube([8,7,11]);
            translate([11,14,-4]) cube([8,7,11]);
            //agujeros pasadores
            translate([0,-1,0]) rotate([-90,0,0]) cylinder(r=1.75, 22);
            translate([15,-1,0]) rotate([-90,0,0]) cylinder(r=1.75, 22);
            //motriz
            translate([6.5,7.5,-2]) cube([5,5,11]);
        }
    }
    union() {
        hull() {
            translate([11.5,6,2.9]) cube([5.3,8,0.1]);
            translate([12,7,4.4]) cube([4.3,6,0.1]);
        }
        hull() {
            translate([4,6,2.9]) cube([2.5,8,0.1]);
            translate([4.5,7,4.4]) cube([1.5,6,0.1]);
        }
    }
}

module driving_wheel(n) {
    dia = (15-(2/7))*n/PI;
    
    echo("Driving wheel teeth:", n);
    echo("Driving wheel diameter:", dia);
    difference() {
        union() {
            //corona dentada
            difference() {
                union() {
                    rotate([-90,0,0]) cylinder(r=dia/2-3, h=2.5);
                    translate([0,2.5,0]) rotate([-90,0,0]) cylinder(r1=dia/2-3, r2=dia/2-3-1.75, h=1);
                    translate([0,3.5,0]) rotate([-90,0,0]) cylinder(r=dia/2-3-1.75, h=8);
                    translate([0,11.5,0]) rotate([-90,0,0]) cylinder(r1=dia/2-3-1.75, r2=dia/2-3, h=1);
                    translate([0,12.5,0]) rotate([-90,0,0]) cylinder(r=dia/2-3, h=2.5);
                    for(i=[0:(360/n):359]) {
                        rotate([0,i,0]) translate([0,5.25,-1.5]) hull() {
                            cube([dia/2-3,4.5,3]);
                            translate([0,1,0.75]) cube([dia/2,2.5,1.5]);
                        }
                    }
                }
                union() {
                    translate([0,-1,0]) rotate([-90,0,0]) cylinder(r=dia/2-4.75-3, h=17);
                }
            }
            //eje
            difference() {
                rotate([-90,0,0]) cylinder(r=5, h=7.5);
                translate([0,-1,0]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
            }
            //radios
            for (i=[22.5:90:359]) {
                rotate([0,i,0]) translate([1.75,0,-1.5]) hull() {
                    cube([1,7.5,3]);
                    translate([dia/2-3-6,0,-dia/8+1.5]) cube([1,3.25,dia/4]);
                }
            }
        }
        //prisionero
        rotate([0,-22.5,0]) translate([0,3.5,0]) cylinder(r=1.25,h=dia/2+5);
        rotate([0,-22.5,0]) translate([0,3.5,5]) cylinder(r=3,h=dia/2+5);
    }
}

module wheel(n) {
    dia = (15-(2/7))*n/PI;
    
    echo("Wheel teeth:", n);
    echo("Wheel diameter:", dia);
    union() {
        //corona dentada
        difference() {
            union() {
                rotate([-90,0,0]) cylinder(r=dia/2-3, h=2.5);
                translate([0,2.5,0]) rotate([-90,0,0]) cylinder(r1=dia/2-3, r2=dia/2-3-1.75, h=1);
                translate([0,3.5,0]) rotate([-90,0,0]) cylinder(r=dia/2-3-1.75, h=8);
                translate([0,11.5,0]) rotate([-90,0,0]) cylinder(r1=dia/2-3-1.75, r2=dia/2-3, h=1);
                translate([0,12.5,0]) rotate([-90,0,0]) cylinder(r=dia/2-3, h=2.5);
            }
            union() {
                translate([0,-1,0]) rotate([-90,0,0]) cylinder(r=dia/2-4.75-3, h=17);
            }
        }
        //eje
        difference() {
            rotate([-90,0,0]) cylinder(r=5, h=7.5);
            translate([0,-1,0]) rotate([-90,0,0]) cylinder(r=1.5, h=9);
        }
        //radios
        for (i=[22.5:90:359]) {
            rotate([0,i,0]) translate([1.75,0,-1.5]) hull() {
                cube([1,7.5,3]);
                translate([dia/2-3-6,0,-dia/8+1.5]) cube([1,3.25,dia/4]);
            }
        }
    }
}

module tapa_motor() {
    difference() {
        translate([0,0,0.5]) cube([22,15,10.26035-0.5]);
        union() {
            //hueco motor
            translate([11,-1,0]) difference() {
            rotate([-90,0,0]) cylinder(r=6.25, h=59); //motor
                union() {
                    translate([-6.25,-1,5.25]) cube([12.5,61,3]);
                    translate([-6.25,-1,-8.25]) cube([12.5,61,3]);
                }
            }
            //agujeros tapa motor
            translate([2.5,7.5,-1]) cylinder(r=1.75, h=11);
            translate([19.5,7.5,-1]) cylinder(r=1.75, h=11);
            //cabezas tornillos
            translate([2.5,7.5,7.5]) cylinder(r=3, h=3);
            translate([19.5,7.5,7.5]) cylinder(r=3, h=3);
        }
    }
}

module hcsr04() {
    color("silver") union() {
        cube([45.5,20.3,1.6]);
        translate([9.7,10.6,1.6]) cylinder(r=8, h=12.2);
        translate([35.7,10.6,1.6]) cylinder(r=8, h=12.2);
        translate([19.7,17.5,1.6]) hull() {
            cylinder(r=2.3,h=3.5);
            translate([6.4,0,0]) cylinder(r=2.3,h=3.5);
        }
        for(i = [19:2.54:(2.54*3+19)]) {
            translate([i,1.9,-4.1]) cylinder(r=0.5, h=7, $fn=4); //cabecera
            translate([i,1.9,-3.6]) rotate([90,0,0]) cylinder(r=0.5, h=7.8, $fn=4); //cabecera
        }
    }
}

module portapilas() {
    color("black") difference() {
        union() {
            cube([62.5,58,16]);
            translate([8.5,0,09]) rotate([90,0,0]) cylinder(r=3,h=2.5);
            translate([22,0,9]) rotate([90,0,0]) cylinder(r=4.5,h=2.5, $fn=6);
        }
        union() {
            translate([3.9,29,-1]) cylinder(r=1.5, h=18);
            translate([19.5,29,-1]) cylinder(r=1.5, h=18);
            translate([43,29,-1]) cylinder(r=1.5, h=18);
            translate([58.6,29,-1]) cylinder(r=1.5, h=18);
        }
    }
}

module roben_zond() {
    color("darkgreen") difference() {
        union() {
            cube([47.7,90.3,1.6+11+2.5]);
            translate([3.1,0,1.6+2.5]) cube([44.6,18,19]);  //arduino
            *translate([20.6,26.5,1.6+2.5]) cube([15.8,3.5,46]);  //bluetooth
            translate([26.2,9.4,-6.5]) cylinder(r=6, h=9);  //piezo
        }
        union() {
            translate([7.2,77.6,-1]) cylinder(r=2.2, h=17);
            translate([7.2,70,-1]) cylinder(r=2.2, h=17);
            translate([7.2,55.4,-1]) cylinder(r=2.2, h=17);
            translate([7.2,47.8,-1]) cylinder(r=2.2, h=17);
            translate([7.2,32.5,-1]) cylinder(r=2.2, h=17);
            translate([7.2,24.9,-1]) cylinder(r=2.2, h=17);
            translate([40.5,77.6,-1]) cylinder(r=2.2, h=17);
            translate([40.5,70,-1]) cylinder(r=2.2, h=17);
            translate([40.5,55.4,-1]) cylinder(r=2.2, h=17);
            translate([40.5,47.8,-1]) cylinder(r=2.2, h=17);
            translate([40.5,32.5,-1]) cylinder(r=2.2, h=17);
            translate([40.5,24.9,-1]) cylinder(r=2.2, h=17);
        }
    }
}

module eje_delantero() {
    color("grey") union() {
        rotate([-90,0,0]) cylinder(r=2.75, h=3); //cabeza tornillo
        rotate([90,0,0]) cylinder(r=1.5, h=30); //tornillo
        translate([0,-10,0]) rotate([90,0,0]) cylinder(r=1.75, h=20); //rosca
        //arandelas
        translate([0,-0.05,0]) rotate([90,0,0]) cylinder(r=3.5, h=0.6);
        translate([0,-0.7,0]) rotate([90,0,0]) cylinder(r=3.5, h=0.6);
        translate([0,-9.35,0]) rotate([90,0,0]) cylinder(r=3.5, h=0.6);
        translate([0,-8.7,0]) rotate([90,0,0]) cylinder(r=3.5, h=0.6);
        translate([0,-14.8,0]) rotate([90,0,0]) cylinder(r=3.5, h=0.6);
        translate([0,-25.5,0]) rotate([90,0,0]) cylinder(r=3.5, h=0.6);
        //tuercas
        translate([0,-10,0]) rotate([90,0,0]) cylinder(r=3.15, h=2.35, $fn=6);
        translate([0,-12.4,0]) rotate([90,0,0]) cylinder(r=3.15, h=2.35, $fn=6);
        translate([0,-26.15,0]) rotate([90,0,0]) cylinder(r=3.15, h=2.35, $fn=6);
    }
}

module motor() {
    color("darkkhaki") translate([-6,0,-5]) difference() {
        union() {
            translate([6,0,5]) rotate([-90,0,0]) cylinder(r=2, h=1); //portaeje
            translate([0,1,0]) cube([12,9,10]); //reductora
            translate([6,10,5]) rotate([-90,0,0]) cylinder(r=6, h=16); //motor
            translate([6,0,5]) rotate([90,0,0]) cylinder(r=1.5, h=9.3); //eje
        }
        union() {
            translate([0,9,10]) cube([12,18,3]);
            translate([0,9,-3]) cube([12,18,3]);
            translate([4.5,-11,6]) cube([3,11,2]);
        }
    }
}

module servo_horn() {
    color("white") difference() {
        union() {
            translate([0,0,2.7]) hull() {
                cylinder(r=3, h=1.6);
                translate([14.15,0,0]) cylinder(r=1.9, h=1.6);
            }
            cylinder(r=3.65, h=4.3);
        }
        union() {
            translate([0,0,-1]) cylinder(r=2.2, h=3.7);
            translate([0,0,3.45]) cylinder(r=2.4, h=2);
            translate([0,0,-1]) cylinder(r=1.25, h=7);
            translate([4.5,0,1]) cylinder(r=0.45, h=4);
            translate([6.6,0,1]) cylinder(r=0.45, h=4);
            translate([8.7,0,1]) cylinder(r=0.45, h=4);
            translate([10.8,0,1]) cylinder(r=0.45, h=4);
            translate([12.9,0,1]) cylinder(r=0.45, h=4);
            translate([15,0,1]) cylinder(r=0.45, h=4);
        }
    }
}

module servo9g(angle) {
    //TowerPro SG90 9g servo
    rotate([0,0,angle]) servo_horn();
    translate([-17.2,-6.325,-27]) union() {
        color("lightblue") union() {
            //cuerpo motor
            translate([0,0,0]) cube([23,12.65,22.8]);
            translate([-4.75,0,15.85]) difference() {
                cube([32.5,12.65,2.3]);
                union() {
                    translate([2.2,6.325,-1]) cylinder(r=1, h=4);
                    translate([-1,5.675,-1]) cube([3,1.3,4]);
                    translate([30.3,6.325,-1]) cylinder(r=1, h=4);
                    translate([30.3,5.675,-1]) cube([3,1.3,4]);
                }
            }
            translate([17.2,6.325,22.8]) cylinder(r=5.8, h=4.2);
            translate([10.35,6.325,22.8]) cylinder(r=2.75, h=4.2);
            translate([10.35,3.575,22.8]) cube([3,5.5,4.2]);
            //eje motor
            translate([17.2,6.325,27]) difference() {
                cylinder(r=2.325, h=2.7);
                translate([0,0,-1] )cylinder(r=0.9, h=5);
            }
        }
        //cables
        translate([23,6.325,5.1]) union() {
            rotate([0,90,0]) color("red") cylinder(r=0.6, h=4.75);
            translate([0,-1.1,0]) rotate([0,90,0]) color("brown") cylinder(r=0.6, h=4.75);
            translate([0,1.1,0]) rotate([0,90,0]) color("orange") cylinder(r=0.6, h=4.75);
        }
    }
}
